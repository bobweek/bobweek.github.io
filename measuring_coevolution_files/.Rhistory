pntl99fd[i] = sum(pild99ntlspec==i)
}
pntl99fd
pcsl99fd
hcsl99fd
max(hild99cslspec)
hild99cslspec
hcsl99fd
fddf = data.frame(f=c(1:max(hild99cslspec),1:max(pild99cslspec)),
csl=c(hcsl99fd,pcsl99fd),
ntl=c(hntl99fd,pntl99fd))
fddf
fddf = data.frame(f=c(1:max(hild99cslspec),1:max(pild99cslspec)),
csl=c(hcsl99fd,pcsl99fd),
ntl=c(hntl99fd,pntl99fd),
spp=c(rep(1,max(hild99cslspec)),rep(2,max(pild99cslspec))))
fddf
fddf = data.frame(f=c(1:max(hild99cslspec),1:max(pild99cslspec)),
csl=c(hcsl99fd,pcsl99fd),
ntl=c(hntl99fd,pntl99fd),
spp=c(rep("Host",max(hild99cslspec)),rep("Parasite",max(pild99cslspec))))
fddf
ggplot(subset(fddf,spp=="Host"))+geom_bar(aes(x=f,y=csl))
ggplot(subset(fddf,spp=="Host"),aes(x=f,y=csl))+geom_bar(stat="identity")
fddf = data.frame(f=c(1:max(hild99cslspec),1:max(pild99cslspec)),
c=c(hcsl99fd,pcsl99fd,hntl99fd,pntl99fd),
type=c(hcsls,hntls,pcsls,pntls),
spp=spps)
hcsls = rep("csl",length(hcsl99fd))
hntls = rep("ntl",length(hntl99fd))
pcsls = rep("csl",length(pcsl99fd))
pntls = rep("ntl",length(pntl99fd))
fddf = data.frame(f=c(1:max(hild99cslspec),1:max(pild99cslspec)),
c=c(hcsl99fd,pcsl99fd,hntl99fd,pntl99fd),
type=c(hcsls,hntls,pcsls,pntls),
spp=spps)
spps = rep(c(rep("Host",max(hild99cslspec)),rep("Parasite",max(pild99cslspec))),2)
hcsls = rep("csl",length(hcsl99fd))
hntls = rep("ntl",length(hntl99fd))
pcsls = rep("csl",length(pcsl99fd))
pntls = rep("ntl",length(pntl99fd))
fddf = data.frame(f=c(1:max(hild99cslspec),1:max(pild99cslspec)),
c=c(hcsl99fd,pcsl99fd,hntl99fd,pntl99fd),
type=c(hcsls,hntls,pcsls,pntls),
spp=spps)
fddf
ggplot(subset(fddf,spp=="Host"),aes(x=f,y=c,fill=type))+geom_bar(stat="identity")
ggplot(subset(fddf,spp=="Host"),aes(x=f,y=c,fill=type))+geom_bar(stat="identity", position=position_dodge())
ggplot(subset(fddf,spp=="Host"),aes(x=f,y=c,fill=type)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal()
ggplot(subset(fddf,spp=="Host"),aes(x=f,y=c,fill=type)) +
geom_bar(stat="identity", position=position_dodge()) +
ylab("Count")+xlab("99th perc occurance")+
theme_minimal()
ggplot(subset(fddf,spp=="Host"),aes(x=f,y=c,fill=type)) +
geom_bar(stat="identity", position=position_dodge()) +
ylab("Count")+xlab("99th perc occurance")+
title("Host")
ggplot(subset(fddf,spp=="Host"),aes(x=f,y=c,fill=type)) +
geom_bar(stat="identity", position=position_dodge()) +
ylab("Count")+xlab("99th perc occurance")+
ggtitle("host")+
theme_minimal()
ggplot(subset(fddf,spp=="Parasite"),aes(x=f,y=c,fill=type)) +
geom_bar(stat="identity", position=position_dodge()) +
ylab("Count")+xlab("99th perc occurance")+
ggtitle("parasite")+
theme_minimal()
ggplot(subset(fddf,spp=="Host"),aes(x=f,y=c,fill=type)) +
geom_bar(stat="identity", position=position_dodge()) +
ylab("Count")+xlab("99th perc occurance")+
ggtitle("host")+
theme_minimal()
ggplot(subset(fddf,spp=="Parasite"),aes(x=f,y=c,fill=type)) +
geom_bar(stat="identity", position=position_dodge()) +
ylab("Count")+xlab("99th perc occurance")+
ggtitle("parasite")+
theme_minimal()
fddf
subset(fddf,spp=="Parasite")
fddf
hild99ntlspec
spps = rep(c(rep("Host",max(hild99cslspec)),rep("Parasite",max(pild99cslspec))),2)
hcsls = rep("csl",length(hcsl99fd))
hntls = rep("ntl",length(hntl99fd))
pcsls = rep("csl",length(pcsl99fd))
pntls = rep("ntl",length(pntl99fd))
fddf = data.frame(f=c(1:max(hild99cslspec),1:max(pild99cslspec)),
c=c(hcsl99fd,pcsl99fd,hntl99fd,pntl99fd),
type=c(hcsls,pcsls,hntls,pntls),
spp=spps)
ggplot(subset(fddf,spp=="Host"),aes(x=f,y=c,fill=type)) +
geom_bar(stat="identity", position=position_dodge()) +
ylab("Count")+xlab("99th perc occurance")+
ggtitle("host")+
theme_minimal()
ggplot(subset(fddf,spp=="Parasite"),aes(x=f,y=c,fill=type)) +
geom_bar(stat="identity", position=position_dodge()) +
ylab("Count")+xlab("99th perc occurance")+
ggtitle("parasite")+
theme_minimal()
require(ggplot2)
hsnps = as.matrix(read.csv("~/gsccs-data/h-csl-snps.csv",header=F)+1)
psnps = as.matrix(read.csv("~/gsccs-data/p-csl-snps.csv",header=F)+1)
ild = as.matrix(read.csv("~/gsccs-data/ild-cor.csv", header=F))
topttl = function(ild){
qtl = quantile(ild,0.99)
topinds = which(ild>qtl, arr.ind = T)
topttl = length(topinds[,1])
return(topttl)
}
summStats = function(ild){
qtl = quantile(ild,0.99)
topinds = which(ild>qtl, arr.ind = T)
hcslinds = topinds[,1] <= length(hsnps)
pcslinds = topinds[,2] <= length(psnps)
cslprs = hcslinds & pcslinds
cslsgl = (hcslinds & !pcslinds) | (!hcslinds & pcslinds)
topttl = length(topinds[,1])
prfrac = sum(cslprs)/topttl
sgfrac = sum(cslsgl)/topttl
cbfrac = prfrac+sgfrac
hprrep = topinds[cslprs,1]
pprrep = topinds[cslprs,2]
hprcpt = unique(hprrep)
pprcpt = unique(pprrep)
hcslfrac = length(hprcpt)/length(hsnps)
pcslfrac = length(pprcpt)/length(psnps)
hsgrep = topinds[hcslinds,1]
psgrep = topinds[pcslinds,2]
hsgcpt = unique(hsgrep)
psgcpt = unique(psgrep)
hsglfrac = length(hsgcpt)/length(hsnps)
psglfrac = length(psgcpt)/length(psnps)
hild99cslspec = c()
for(i in hsgcpt){
hild99cslspec = c(hild99cslspec, sum(hsgrep==i))
}
pild99cslspec = c()
for(i in psgcpt){
pild99cslspec = c(pild99cslspec, sum(psgrep==i))
}
hcsl99fd = c()
for(i in 1:max(hild99cslspec)){
hcsl99fd = c(hcsl99fd, sum(hild99cslspec==i))
}
pcsl99fd = c()
for(i in 1:max(pild99cslspec)){
pcsl99fd = c(pcsl99fd, sum(pild99cslspec==i))
}
hntlrep = topinds[!hcslinds,1]
pntlrep = topinds[!pcslinds,2]
hntlcpt = unique(hntlrep)
pntlcpt = unique(pntlrep)
hild99ntlspec = c()
for(i in hntlcpt){
hild99ntlspec = c(hild99ntlspec, sum(hntlrep==i))
}
pild99ntlspec = c()
for(i in pntlcpt){
pild99ntlspec = c(pild99ntlspec, sum(pntlrep==i))
}
hntl99fd = rep(0,max(hild99cslspec))
for(i in 1:max(hild99cslspec)){
hntl99fd[i] = sum(hild99ntlspec==i)
}
pntl99fd = rep(0,max(pild99cslspec))
for(i in 1:max(pild99cslspec)){
pntl99fd[i] = sum(pild99ntlspec==i)
}
spps = rep(c(rep("Host",max(hild99cslspec)),rep("Parasite",max(pild99cslspec))),2)
hcsls = rep("csl",length(hcsl99fd))
hntls = rep("ntl",length(hntl99fd))
pcsls = rep("csl",length(pcsl99fd))
pntls = rep("ntl",length(pntl99fd))
fddf = data.frame(f=c(1:max(hild99cslspec),1:max(pild99cslspec)),
c=c(hcsl99fd,pcsl99fd,hntl99fd,pntl99fd),
type=c(hcsls,pcsls,hntls,pntls),
spp=spps)
stts = data.frame(prfrac,sgfrac,cbfrac,hcslfrac,pcslfrac,hsglfrac,psglfrac)
return(list(fddf,stts))
}
ssdfs = summStats(ild)
ssdfs
fddf = ssdfs[[1]]
ss.cor = summStats(ild.cor)
ild.cor = as.matrix(read.csv("~/gsccs-data/ild-cor.csv", header=F))
ild.cov = as.matrix(read.csv("~/gsccs-data/ild-cov.csv", header=F))
ss.cor = summStats(ild.cor)
ss.cov = summStats(ild.cov)
descrs = c("Number cor-based ild pairs occuring in top 99th percentile",
"Number cov-based ild pairs occuring in top 99th percentile",
"Number host causal loci",
"Number para causal loci")
vals = c(topttl(ild.cor),topttl(ild.cov),length(hsnps),length(psnps))
statdt = cbind(descrs,formatC(as.numeric(vals))) #, digits = 1, format = "e", drop0trailing = FALSE))
statdf = data.frame(statdt)
colnames(statdf) = c("Description","Value")
knitr::kable(statdf)
ggplot(fddf.cor,aes(x=f,y=c,fill=type)) +
geom_bar(stat="identity", position=position_dodge()) +
facet_grid(var(spp)) +
ylab("Count")+xlab("99th perc occurance")+
ggtitle("host")+
theme_minimal()
fddf.cor = ss.cor[[1]]
fddf.cov = ss.cov[[1]]
ggplot(fddf.cor,aes(x=f,y=c,fill=type)) +
geom_bar(stat="identity", position=position_dodge()) +
facet_grid(var(spp)) +
ylab("Count")+xlab("99th perc occurance")+
ggtitle("host")+
theme_minimal()
fddf.cor
ggplot(fddf.cor,aes(x=f,y=c,fill=type)) +
geom_bar(stat="identity", position=position_dodge()) +
facet_grid(vars(spp)) +
ylab("Count")+xlab("99th perc occurance")+
ggtitle("host")+
theme_minimal()
ss.cor
ss.cov
fddf.cor
fddf.cor$f
bsd = c(rep("cor",length(fddf.cor$f)),
rep("cov",length(fddf.cov$f)))
rbind(fddf.cor,fddf.cov)
data.frame(rbind(fddf.cor,fddf.cov),base=bsd)
fddf = data.frame(rbind(fddf.cor,fddf.cov),base=bsd)
ggplot(fddf,aes(x=f,y=c,fill=type)) +
geom_bar(stat="identity", position=position_dodge()) +
facet_grid(spp~base) +
ylab("Count")+xlab("99th perc occurance")+
theme_minimal()
ss.cor$prfrac
ss.cor
frc.cor = ss.cor[[2]]
frc.cov = ss.cov[[2]]
frc.cor$prfrac
cor.vals = c(frc.cor$prfrac,frc.cor$sgfrac,frc.cor$cbfrac,frc.cor$hcslfrac,frc.cor$pcslfrac,frc.cor$hsglfrac,frc.cor$psglfrac)
cor.vals
cov.vals = c(frc.cov$prfrac,frc.cov$sgfrac,frc.cov$cbfrac,
frc.cov$hcslfrac,frc.cov$pcslfrac,frc.cov$hsglfrac,frc.cov$psglfrac)
pfmsrdt = cbind(descrs,formatC(as.numeric(cor.vals)),formatC(as.numeric(cov.vals))) #, digits = 1, format = "e", drop0trailing = FALSE))
cov.vals = c(frc.cov$prfrac,frc.cov$sgfrac,frc.cov$cbfrac,
frc.cov$hcslfrac,frc.cov$pcslfrac,frc.cov$hsglfrac,frc.cov$psglfrac)
pfmsrdt = cbind(descrs,formatC(as.numeric(cor.vals)),formatC(as.numeric(cov.vals))) #, digits = 1, format = "e", drop0trailing = FALSE))
# make table of performance measures
descrs = c("Fraction of top 99th perc corresponding to a causal pair",
"Fraction of top 99th perc corresponding to exactly one causal locus",
"Fraction of top 99th perc corresponding to at least one causal locus",
"Fraction host loci appearing in causal pair in the 99th perc",
"Fraction para loci appearing in causal pair in the 99th perc",
"Fraction host loci appearing in 99th perc",
"Fraction para loci appearing in 99th perc")
cor.vals = c(frc.cor$prfrac,frc.cor$sgfrac,frc.cor$cbfrac,
frc.cor$hcslfrac,frc.cor$pcslfrac,frc.cor$hsglfrac,frc.cor$psglfrac)
cov.vals = c(frc.cov$prfrac,frc.cov$sgfrac,frc.cov$cbfrac,
frc.cov$hcslfrac,frc.cov$pcslfrac,frc.cov$hsglfrac,frc.cov$psglfrac)
pfmsrdt = cbind(descrs,formatC(as.numeric(cor.vals)),formatC(as.numeric(cov.vals))) #, digits = 1, format = "e", drop0trailing = FALSE))
pfmsr = data.frame(pfmsrdt)
colnames(pfmsr) = c("Description","Value")
colnames(pfmsr) = c("Description","Cor","Cov")
knitr::kable(pfmsr)
pfq = as.matrix(read.csv("~/gsccs-data/pfrq-csl-gbl.csv", header = F))
hes = as.matrix(read.csv("~/gsccs-data/h-effect-sizes.csv", header=F))
pes = as.matrix(read.csv("~/gsccs-data/p-effect-sizes.csv", header=F))
hfq = as.matrix(read.csv("~/gsccs-data/hfrq-csl-gbl.csv", header = F))
pfq = as.matrix(read.csv("~/gsccs-data/pfrq-csl-gbl.csv", header = F))
hvrsk = hes^2*hfq*(1-hfq)
pvrsk = pes^2*pfq*(1-pfq)
hmaxild.cor = rep(0,length(hes))
for(i in 1:length(hes)){
hmaxild.cor[i] = max(abs(ild.cor[i,]))
}
pmaxild.cor = rep(0,length(pes))
for(i in 1:length(pes)){
pmaxild.cor[i] = max(abs(ild.cor[,i]))
}
skild = data.frame(sk=abs(c(hvrsk,pvrsk)),
ild=c(hmaxild,pmaxild),
es2=c(hes^2,pes^2),
gv=c(hfq*(1-hfq),pfq*(1-pfq)),
spp=c(rep("Host",length(hes)),rep("Parasite",length(pes))))
skild = data.frame(sk=abs(c(hvrsk,pvrsk)),
ild=c(hmaxild.cor,pmaxild.cor),
es2=c(hes^2,pes^2),
gv=c(hfq*(1-hfq),pfq*(1-pfq)),
spp=c(rep("Host",length(hes)),rep("Parasite",length(pes))))
ggplot(skild) +
geom_point(aes(x=sk,y=ild, color=spp)) +
labs(x = "pᵢ(1-pᵢ)(Effect Size)ᵢ²",
y = "max(ILD)ᵢ",
color = "Legend") +
scale_color_manual(values = colors) +
theme_minimal()
skild = data.frame(sk=abs(c(hvrsk,pvrsk)),
cor=c(hmaxild.cor,pmaxild.cor),
cov=c(hmaxild.cov,pmaxild.cov),
es2=c(hes^2,pes^2),
gv=c(hfq*(1-hfq),pfq*(1-pfq)),
spp=c(rep("Host",length(hes)),rep("Parasite",length(pes))))
hmaxild.cov = rep(0,length(hes))
for(i in 1:length(hes)){
hmaxild.cov[i] = max(abs(ild.cov[i,]))
}
pmaxild.cov = rep(0,length(pes))
for(i in 1:length(pes)){
pmaxild.cov[i] = max(abs(ild.cov[,i]))
}
skild = data.frame(sk=abs(c(hvrsk,pvrsk)),
cor=c(hmaxild.cor,pmaxild.cor),
cov=c(hmaxild.cov,pmaxild.cov),
es2=c(hes^2,pes^2),
gv=c(hfq*(1-hfq),pfq*(1-pfq)),
spp=c(rep("Host",length(hes)),rep("Parasite",length(pes))))
skild = data.frame(sk=abs(c(hvrsk,pvrsk,hvrsk,pvrsk)),
ild=c(hmaxild.cor,pmaxild.cor,hmaxild.cov,pmaxild.cov),
es2=c(hes^2,pes^2,hes^2,pes^2),
gv=c(hfq*(1-hfq),pfq*(1-pfq),hfq*(1-hfq),pfq*(1-pfq)),
spp=rep(c(rep("Host",length(hes)),rep("Parasite",length(pes))),2))
lgth = length(c(hes^2,pes^2))
skild = data.frame(sk=abs(c(hvrsk,pvrsk,hvrsk,pvrsk)),
ild=c(hmaxild.cor,pmaxild.cor,hmaxild.cov,pmaxild.cov),
es2=c(hes^2,pes^2,hes^2,pes^2),
gv=c(hfq*(1-hfq),pfq*(1-pfq),hfq*(1-hfq),pfq*(1-pfq)),
spp=rep(c(rep("Host",length(hes)),rep("Parasite",length(pes))),2),
base=c(rep("cor",lgth),rep("cov",lgth)))
ggplot(skild) +
geom_point(aes(x=sk,y=ild, color=spp)) +
labs(x = "pᵢ(1-pᵢ)(Effect Size)ᵢ²",
y = "max(ILD)ᵢ",
color = "Legend") +
scale_color_manual(values = colors) +
facet_grid(vars(base)) +
theme_minimal()
ggplot(skild) +
geom_point(aes(x=sk,y=ild, color=spp)) +
labs(x = "pᵢ(1-pᵢ)(Effect Size)ᵢ²",
y = "max(ILD)ᵢ",
color = "Legend") +
scale_color_manual(values = colors) +
facet_grid(vars(base),scales="free") +
theme_minimal()
ggplot(skild) +
geom_point(aes(x=sk,y=ild, color=spp)) +
labs(x = "pᵢ(1-pᵢ)(Effect Size)ᵢ²",
y = "max(ILD)ᵢ",
color = "Legend") +
scale_color_manual(values = colors) +
facet_grid(cols=vars(base),scales="free") +
theme_minimal()
ggplot(skild) +
geom_point(aes(x=gv,y=ild, color=spp)) +
labs(x = "pᵢ(1-pᵢ)",
y = "max(ILD)ᵢ",
color = "Legend") +
scale_color_manual(values = colors) +
facet_grid(cols=vars(base),scales="free") +
theme_minimal()
ggplot(skild) +
geom_point(aes(x=sk,y=ild, color=spp)) +
labs(x = "pᵢ(1-pᵢ)(Effect Size)ᵢ²",
y = "max(ILD)ᵢ",
color = "Legend") +
scale_color_manual(values = colors) +
facet_grid(~base,scales="free") +
theme_minimal()
ggplot(skild) +
geom_point(aes(x=sk,y=ild, color=spp)) +
labs(x = "pᵢ(1-pᵢ)(Effect Size)ᵢ²",
y = "max(ILD)ᵢ",
color = "Legend") +
scale_color_manual(values = colors) +
facet_grid(.~base,scales="free") +
theme_minimal()
ggplot(skild) +
geom_point(aes(x=sk,y=ild, color=spp)) +
labs(x = "pᵢ(1-pᵢ)(Effect Size)ᵢ²",
y = "max(ILD)ᵢ",
color = "Legend") +
scale_color_manual(values = colors) +
facet_grid(cols=vars(base),scales="free_y") +
theme_minimal()
ggplot(skild) +
geom_point(aes(x=sk,y=ild, color=spp)) +
labs(x = "pᵢ(1-pᵢ)(Effect Size)ᵢ²",
y = "max(ILD)ᵢ",
color = "Legend") +
scale_color_manual(values = colors) +
facet_grid(cols=vars(base),scale="free_y") +
theme_minimal()
ggplot(skild) +
geom_point(aes(x=sk,y=ild, color=spp)) +
labs(x = "pᵢ(1-pᵢ)(Effect Size)ᵢ²",
y = "max(ILD)ᵢ",
color = "Legend") +
scale_color_manual(values = colors) +
facet_grid(~base,scale="free_y") +
theme_minimal()
ggplot(skild) +
geom_point(aes(x=sk,y=ild, color=spp)) +
labs(x = "pᵢ(1-pᵢ)(Effect Size)ᵢ²",
y = "max(ILD)ᵢ",
color = "Legend") +
scale_color_manual(values = colors) +
facet_wrap(~base,scale="free_y") +
theme_minimal()
ggplot(skild) +
geom_point(aes(x=gv,y=ild, color=spp)) +
labs(x = "pᵢ(1-pᵢ)",
y = "max(ILD)ᵢ",
color = "Legend") +
scale_color_manual(values = colors) +
facet_wrap(~base,scale="free_y") +
theme_minimal()
ggplot(skild) +
geom_point(aes(x=es2,y=ild, color=spp)) +
labs(x = "(Effect Size)ᵢ²",
y = "max(ILD)ᵢ",
color = "Legend") +
scale_color_manual(values = colors) +
facet_wrap(~base,scale="free_y") +
theme_minimal()
qtl = quantile(ild,0.99)
qtl
topinds = which(ild>qtl, arr.ind = T)
topinds
hcslinds = topinds[,1] <= length(hsnps)
pcslinds = topinds[,2] <= length(psnps)
hcslinds
length(hcslinds)
dim(topinds)
ild.cor
as.vector(ild.cor)
crvscv = data.frame(cor=as.vector(ild.cor),cov=as.vector(ild.cov))
ggplot(crvscv,aes(x=cor,y=cov)) + geom_point()
require(ggplot2)
ggplot(crvscv,aes(x=cor,y=cov)) + geom_point()
ggplot(crvscv,aes(x=cor,y=cov)) +
geom_point() +
theme_minimal()
ggplot(crvscv,aes(x=cor,y=cov)) +
geom_point(color='orange') +
theme_minimal()
ggplot(crvscv,aes(x=cor,y=cov)) +
geom_point(color='orange',alpha=0.5) +
theme_minimal()
ggplot(crvscv,aes(x=cor,y=cov)) +
geom_point(color='pink',alpha=0.5) +
theme_minimal()
ggplot(crvscv,aes(x=cor,y=cov)) +
geom_point(color='magenta',alpha=0.5) +
theme_minimal()
ggplot(crvscv,aes(x=cor,y=cov)) +
geom_point(color='magenta',alpha=0.25) +
theme_minimal()
ggplot(crvscv,aes(x=cor,y=cov)) +
geom_point(color='magenta',alpha=0.25) +
xlab("Correlation-based ILD") +
ylab("Covariance-based ILD") +
theme_minimal()
ggplot(crvscv,aes(x=cor,y=cov)) +
geom_point(color='teal',alpha=0.25) +
xlab("Correlation-based ILD") +
ylab("Covariance-based ILD") +
theme_minimal()
ggplot(crvscv,aes(x=cor,y=cov)) +
geom_point(color='seagreen1',alpha=0.25) +
xlab("Correlation-based ILD") +
ylab("Covariance-based ILD") +
theme_minimal()
ggplot(crvscv,aes(x=cor,y=cov)) +
geom_point(color='seagreen',alpha=0.25) +
xlab("Correlation-based ILD") +
ylab("Covariance-based ILD") +
theme_minimal()
ggplot(crvscv,aes(x=cor,y=cov)) +
geom_point(color='turquoise',alpha=0.25) +
xlab("Correlation-based ILD") +
ylab("Covariance-based ILD") +
theme_minimal()
ggplot(crvscv,aes(x=cor,y=cov)) +
geom_point(color='grey',alpha=0.25) +
xlab("Correlation-based ILD") +
ylab("Covariance-based ILD") +
theme_minimal()
ggplot(crvscv,aes(x=cor,y=cov)) +
geom_point(color='grey',alpha=0.5) +
xlab("Correlation-based ILD") +
ylab("Covariance-based ILD") +
theme_minimal()
ggplot(crvscv,aes(x=cor,y=cov)) +
geom_point(color='black',alpha=0.25) +
xlab("Correlation-based ILD") +
ylab("Covariance-based ILD") +
theme_minimal()
crvscv = data.frame(cor=as.vector(ild.cor),cov=as.vector(ild.cov))
ggplot(crvscv,aes(x=cor,y=cov)) +
geom_point(color='black',alpha=0.15) +
xlab("Correlation-based ILD") +
ylab("Covariance-based ILD") +
theme_minimal()
tdf <- read.csv("~/gsccs-data/isl/traits.csv")
head(tdf)
install.packages(c("AsioHeaders", "bookdown", "brew", "broom", "bslib", "callr", "classInt", "cli", "collections", "commonmark", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "desc", "devtools", "dfidx", "digest", "dotCall64", "dplyr", "DT", "dtplyr", "e1071", "evaluate", "evd", "farver", "fields", "FNN", "fontawesome", "forcats", "gargle", "generics", "geoR", "gert", "ggforce", "ggraph", "gh", "gitcreds", "googlesheets4", "graphlayouts", "gstat", "gtable", "gtools", "haven", "hms", "htmltools", "httpuv", "httr", "igraph", "isoband", "jsonlite", "knitr", "languageserver", "latex2exp", "lifecycle", "lintr", "locfit", "markdown", "MatrixModels", "modelr", "openssl", "orthopolynom", "packrat", "pagedown", "pillar", "pkgload", "polyclip", "pracma", "processx", "proxy", "ps", "purrr", "R.cache", "R.methodsS3", "R.utils", "raster", "rbibutils", "Rcpp", "RcppArmadillo", "RCurl", "Rdpack", "readr", "readxl", "reprex", "rgl", "rlang", "rmarkdown", "rmdformats", "roxygen2", "rsconnect", "rstudioapi", "rticles", "rversions", "rvest", "s2", "sass", "scales", "scholar", "sf", "shiny", "spacetime", "spam", "spatstat.data", "spatstat.geom", "spatstat.utils", "spData", "stringi", "stringr", "styler", "sys", "terra", "testthat", "tibble", "tidygraph", "tidyr", "tidyselect", "tidyverse", "tinytex", "tweenr", "usethis", "V8", "vctrs", "viridisLite", "vroom", "wk", "xfun", "xts", "yaml", "zip", "zoo"))
pwd()
getwd()
setwd("~/gits/bobweek.github.io/")
setwd("measuring_coevolution_files/")
getwd()
